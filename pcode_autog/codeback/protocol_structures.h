/* This file is generated by pcode_autog
** Copyright(c) Laked.Goo, ALL RIGHTS RESERVED.
**
** Purpose: contains basic structures for protocol
**
*/
#ifndef _PROTOCOL_STRUCTURES_H_
#define _PROTOCOL_STRUCTURES_H_


#include "protocol_includes.h"
namespace structures {

struct player_game_result {
    uint32_t                player_id_;
    uint8_t                 player_level_;
    uint32_t                player_level_cur_exp_;
    uint32_t                player_levelup_total_exp_;
    uint32_t                player_round_exp_;
    int32_t                 player_round_gold_;
    int32_t                 player_total_gold_;
    int32_t                 player_hall_mark_up_gold_;
    uint32_t                player_hall_mark_up_exp_;
    uint32_t                player_evalue_toplimit_;
};

struct room_info {
    uint8_t                 room_num_;
    uint8_t                 player_count_;
    uint8_t                 room_status_;
};

struct service_info {
    uint16_t                item_id_;
    uint32_t                item_pay_type_;
};

struct player_service_info {
    uint32_t                player_id_;
    uint8_t                 service_count_;
    service_info            service_infos_[9];
};

struct player_info_from_client {
    uint32_t                id_;
    char                    name_[16];
    uint8_t                 role_id_;
    int16_t                 x_;
    int16_t                 y_;
    uint8_t                 move_type_;
    uint8_t                 direction_;
    uint8_t                 ready_state_;
};

struct player_info_from_server {
    uint8_t                 level_;
    uint32_t                level_cur_exp_;
    uint32_t                levelup_total_exp_;
    uint32_t                history_highest_round_exp_;
    int32_t                 history_highest_round_gold_;
    int32_t                 total_gold_;
    int32_t                 gold_capacity_;
    int32_t                 evalue_;
    int32_t                 evalue_toplimit_;
    uint8_t                 index_in_room_;
    uint8_t                 service_count_;
    service_info            service_infos_[9];
};

struct player_info {
    player_info_from_client  ci_;
    player_info_from_server  si_;
};

struct item_valid_range_info {
    uint32_t                player_id_;
    uint8_t                 dodge_code_;
    uint32_t                injured_comfort_evalue_;
};

struct drop_widget_info {
    int16_t                 widget_id_;
    int16_t                 widget_x_;
    uint32_t                widget_serial_number_;
};

struct donate_item_info {
    uint16_t                item_widget_id_;
    uint32_t                item_serial_number;
};

struct simple_widget_info {
    uint16_t                id_;
    int16_t                 x_;
    uint32_t                serial_number_;
    uint32_t                holder_;
};

struct widget_attr {
    const char*             name_;
    int32_t                 bounty_plus_;
    int32_t                 exp_plus_;
    int32_t                 hit_exp_plus_;
    uint8_t                 damage_type_;
    uint8_t                 affect_effect_;
    uint16_t                affect_range_;
    uint16_t                duration_;
    int32_t                 evalue_cost_;
    float                   occurs_;
};

struct item_cost_info {
    uint16_t                item_id_;
    int32_t                 item_evalue_cost_;
};

};



#endif

