<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--
Field Supported Attributes:
command_id,
length_specifier
present_condition
zlib: 1: compress message body use zlib, 0: no zlib used.
mode: encode: generate encode code only, generate decode only, all: generate all
c++ protocol header code header:
messages::HwpHeader createHeader(uint16_t command_id, uint16_t version = 1, uint16_t reserved = 0x6102)
{
    messages::HwpHeader header;
    header.length = 0;
    header.command_id = command_id;
    header.version = version;
    header.reserved = reserved;
    header.reserved2 = microtime();
}

-->
<protocol name="client" version="1.16" author="halx99" release_date="2016.6.8">

  <header desc="16 bytes header, unused for generator, on for description protocol">
    <field name="length" type="uint16_t" />
    <field name="command_id" type="uint16_t" />
    <field name="version"  type="uint16_t" />
    <field name="reserved" type="uint64_t" /> <!-- use as magic number -->
  </header>

  <structures>
    
    <structure name="RealtimeFieldInfo">
      <field name="user_name" type="std::string" />
      <field name="equip_id" type="uint32_t" />
      <field name="hero_id" type="uint32_t" />
      <field name="hero_lv" type="uint16_t" />
      <field name="hero_hp" type="uint32_t" />
      <field name="hero_mp" type="uint32_t" />
      <field name="idles" type="uint16_t" />
      <field name="wrecord" type="uint16_t" />
      <field name="invails" type="std::string" />
      <field name="cells" type="std::string" />      
    </structure>
    
  </structures>

  <messages>
    
    <message name="MsgHeader" is_header="1" >
      <field name="length" type="uint16_t" />
      <field name="command_id" type="uint16_t" />
      <field name="version"  type="uint16_t" />
      <field name="reserved" type="uint16_t" /> <!-- For packet check: 0x6102-->
      <field name="reserved2" type="uint64_t" /> <!-- May be timestamp -->
    </message>
   
    <message name="MsgTest" command_id="CID_MSG_TEST = 10020" mode="encode">
      <field name="name" type="std::string" />
      <field name="age" type="int" />
      <field name="sex" type="male" />
      <field name="soldiers" type="std::vector&lt;RealtimeFieldInfo&gt;" />
    </message>
    
  </messages>
  
</protocol>


